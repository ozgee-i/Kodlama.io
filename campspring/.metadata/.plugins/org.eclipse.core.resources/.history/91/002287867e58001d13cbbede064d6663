package kodlama.io.Kodlama.io.Devs.dataAccess.concretes;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Repository;

import kodlama.io.Kodlama.io.Devs.dataAccess.abstracts.LanguageRepository;
import kodlama.io.Kodlama.io.Devs.entities.concretes.Language;

@Repository
public class InMemoryLanguageRepository implements LanguageRepository {

	List<Language> languages;
	
	public InMemoryLanguageRepository(){
		languages = new ArrayList<Language>();
        languages.add(new Language(1,"JAVA"));
        languages.add(new Language(2,"C#"));
        languages.add(new Language(3,"Python"));
    }
	
	@Override
	public List<Language> getAllLanguage() {
		return languages;
	}

	@Override
	public Language getIdLanguage(int id) {
		for(Language language : languages) {
            if(language.getId()==id){
                return language;
            }
        }
		return null;
	}

	@Override
	public void addLanguage(Language language) {
		boolean control = false;
        for(Language lang : languages) {
            if(language.getName().equals(lang.getName()) || lang.getId() == lang.getId()) {
                control = true;
            }
            else if(!language.getName().equals("")){
                languages.add(language);
            }
        }
		
	}

	@Override
	public void deleteLanguage(int id) {
		for(Language lang : languages) {
            if(lang.getId() == id){
                languages.remove(lang);
            }
		}
	}

	@Override
	public void updateLanguage(Language language) {
		for(Language lang : languages){
            if(language.getId()==lang.getId()){
                lang.setId(language.getId());
                lang.setName(language.getName());
            }
        }		
	}

}
